package com.example.springsecurity.Entity;import jakarta.persistence.*;import lombok.AllArgsConstructor;import lombok.Builder;import lombok.Data;import lombok.NoArgsConstructor;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import java.util.Collection;import java.util.List;@Entity@Data@AllArgsConstructor@NoArgsConstructor@Builder@Table (name = "user")public class User implements UserDetails {    @Id    @GeneratedValue (strategy = GenerationType.IDENTITY)    private Long id;    private String first_name;    private String last_name;    private String email;    private String password;    @Enumerated (EnumType.ORDINAL)    private Role role;    @Override    public Collection<? extends GrantedAuthority> getAuthorities() {        return List.of(new SimpleGrantedAuthority(role.name()));    }    @Override    public String getUsername() {        return email;    }    @Override    public String getPassword () {        return password;    }    @Override    public boolean isAccountNonExpired() {        return true;    }    @Override    public boolean isAccountNonLocked() {        return true;    }    @Override    public boolean isCredentialsNonExpired() {        return true;    }    @Override    public boolean isEnabled() {        return true;    }}